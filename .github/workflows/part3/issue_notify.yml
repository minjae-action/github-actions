name: issue-notify

on:
  issues:
    types: [opened]

# checkout 을 통해 깃헙레포에서 가져온 keyword list 를 keywords에 대입
# 반복문을 실행하면서 이슈이름이 키워드와 유사하면 output 구성
jobs:
  get-keyword:
    runs-on: ubuntu-latest
    outputs:
      level: ${{ steps.get-keyword.outputs.level }}
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: get keyword
        id: get-keyword
        run: |
          echo level=Undefined >> $GITHUB_OUTPUT

          keywords=$(cat keyword-list.txt)
          for keyword in $keywords; do
            if [[ "${{ github.event.issue.title }}" =~ "$keyword" ]]; then
              echo level=$keyword >> $GITHUB_OUTPUT
            fi
          done

      - name: get output
        run: |
          echo ${{ steps.get-keyword.outputs.level }}

# environment 를 설정 했으니 맨밑 secrets.SLACK_WEBHOOK_URL은 그 환경에 따라 값이 달라짐
  slack:
    needs: [get-keyword]
    if: needs.get-keyword.outputs.level != 'Undefined'
    runs-on: ubuntu-latest
    #environment: ${{ needs.get-keyword.outputs.level }}
    # strategy 부분은 githubaction 에서 무슨 환경인지 알려주는 용도임
    strategy:
      matrix:
        environment: ["${{ needs.get-keyword.outputs.level}}"]
    environment: ${{ matrix.environment }}    

    steps:
      - name: slack
        uses: slackapi/slack-github-action@v1  
        with:
          payload: |
            {
              "attachments": [
                {
                  "pretext": "issue alert message",
                  "color": "28a745",
                  "fields": [
                    {
                      "title": "Level :  ${{ needs.get-keyword.outputs.level }}",
                      "short": true,
                      "value": "issue url : ${{ github.event.issue.url }}"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
